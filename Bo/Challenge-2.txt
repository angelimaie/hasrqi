Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.



import Data.List

main = print $ foldl1 (+) $ filter even $ takeWhile(<4000000) $ fibList [2..]

fibList::[Int]->[Integer]
fibList = map (\n->round ((((1+sqrt 5)/2)^n - ((1-sqrt 5)/2)^n)/(sqrt 5)))
